# THIS CODE WAS AUTOGENERATED. DO NOT MODIFY THIS FILE DIRECTLY
# THE SOURCE CODE LIVES IN A DIFFERENT REPOSITORY:
#   - centralized-templates
# FILE STEWARD: @pleo-io/devx

name: Release
on:
  push:
    branches:
      - main

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  determine-release:
    name: Determine release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    outputs:
      version: ${{ steps.release-label.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with:
          fetch-depth: 0

      - uses: 8BitJonny/gh-get-current-pr@2.2.0
        id: determine-pr

      - name: Cache Auto
        if: steps.determine-pr.outputs.pr_found == 'true'
        id: cache-auto
        uses: actions/cache@v3
        with:
          path: ~/auto
          key: dependency--intuit/auto-v11.0.4

      - name: Setup Auto
        if: steps.determine-pr.outputs.pr_found == 'true' && steps.cache-auto.outputs.cache-hit != 'true'
        run: |
          curl -vkL -o - https://github.com/intuit/auto/releases/download/v11.0.4/auto-linux.gz | gunzip > ~/auto
          chmod a+x ~/auto

      - name: Determine version
        if: steps.determine-pr.outputs.pr_found == 'true'
        id: release-label
        run: |
          labels="$(~/auto label --pr ${{ steps.determine-pr.outputs.number }})"
          version=""

          if [[ $labels == *"patch"* ]]; then
            version="patch"
          fi
          if [[ $labels == *"minor"* ]]; then
            version="minor"
          fi
          if [[ $labels == *"major"* ]]; then
            version="major"
          fi

          echo "version=$version" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: determine-release
    if: needs.determine-release.outputs.version == 'patch' || needs.determine-release.outputs.version == 'minor' || needs.determine-release.outputs.version == 'major'
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
    steps:
      - name: Allow pushing version updates to the default branch (private repository)
        if: ${{ github.event.repository.private == true }}
        id: get-admin-token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ secrets.PLEO_GH_APP_TOKEN_SIGNER_APP_ID }}
          application_private_key: ${{ secrets.PLEO_GH_APP_TOKEN_SIGNER_PRIVATE_KEY }}

      - name: Checkout code (private repository)
        if: ${{ github.event.repository.private == true }}
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with:
          token: ${{ steps.get-admin-token.outputs.token }}
          fetch-depth: 0

      - name: Checkout code (public repository)
        if: ${{ github.event.repository.private == false }}
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Allow pushing version updates to the default branch (public repository)
        if: ${{ github.event.repository.private == false }}
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.RELEASE_KEY }}

      - name: Cache Auto
        id: cache-auto
        uses: actions/cache@v3
        with:
          path: ~/auto
          key: dependency--intuit/auto-v11.0.4

      - name: Setup Auto
        if: steps.cache-auto.outputs.cache-hit != 'true'
        run: |
          curl -vkL -o - https://github.com/intuit/auto/releases/download/v11.0.4/auto-linux.gz | gunzip > ~/auto
          chmod a+x ~/auto

      - name: Set up Poetry
        run: |
          pipx install poetry

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: "poetry"

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Bump ${{ needs.determine-release.outputs.version }} version
        if: needs.determine-release.outputs.version
        run: |
          poetry version ${{ needs.determine-release.outputs.version }}

      - name: Get new version
        id: bump-version
        run: |
          echo "version=$(poetry version --short)" >> "$GITHUB_OUTPUT"

      - name: Commit version bump
        uses: EndBug/add-and-commit@v9
        with:
          message: Release v${{ steps.bump-version.outputs.version }}
          push: false

      - name: Run Auto release
        run: |
          ~/auto shipit
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
